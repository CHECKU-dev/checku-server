plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'dev.checku'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // feign client
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.0'

    // jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    // fcm
    implementation 'com.google.firebase:firebase-admin:7.1.0'

    // mysql
    runtimeOnly 'mysql:mysql-connector-java'

    // aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // redis
    implementation "org.springframework.boot:spring-boot-starter-data-redis"

    // Logstash
    implementation 'net.logstash.logback:logstash-logback-encoder:6.6'

    implementation 'org.springframework:spring-aspects'
    implementation 'org.springframework.retry:spring-retry'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
